****  lvi-sam 设计初衷  ****
1）基于激光的方法，在结构比较简单的环境里容易失效，因为特征只有一个简单的range信息
2）基于视觉的方法，容易受到光照改变、快速运动导致的图像模糊等问题，所以，一般加入imu传感器辅助，但是imu具有bias，其估计值并不是很准


**** 参考源码的问题  ****
1）vins-mono实现单目视觉和imu的融合，但是其需要一个初始化问题
       简单来讲，单目相机无法观测实际尺度，因此就无法和具有实际尺度的Imu数据进行融合，单目相机必须经过一个初始化过程与imu 联系在一起。
       vins-mono在初始静止或匀速运动时，imu没有加速度，初始化会失败，进而导致后续的其他问题，这也是大多数vio的通病，官方初始化需要晃动以下产生速度激励(加速度)
       解释为什么需要一个比较大的速度激励，因为若速度激励不够，bias比实际的值都大，预积分出来必定不准；若速度激励足够大，bias对预积分的影响微乎其微

       vins-mono的初始化过程为：
       a、给一个滑窗，选择参考帧，计算参考帧位姿
       b、SFM方式估计路标点深度，求解出窗口内的所有位姿
       c、对齐相机和imu的轨迹估计外参：最开始的用旋转激励来标定陀螺仪bias，用平移激励来标定加速度计bias；vins-mono是单目，它需要将一段相机轨迹与imu预积分轨迹对齐，进而恢复尺度(最主要问题)
                但是，像vins-fusion是双目，它本身可以通过立体视觉来恢复尺度，只需要将相机和imu的重力向量对齐(vio下四自由度不可观？xyz-yaw，不懂)
                csdn解释：可观性/能观性用最通俗和直观的方式来描述就是：状态一变，测量就变
                                        单目slam存在7自由度不可观：3旋转，3平移，尺度皆不可观
                                        单目+IMU存在4自由度不可观：Yaw与3平移，pitch与roll因重力而可观，尺度因加速度计而可观
       b、......非线性系统需要基于初始不断优化

       VIS基本上采用vins-mono的思路，但有改进：
       a、初始化位姿和imu初始bias直接由VIS来提供(大多数vio缺陷)，如果传统的vio就要在yaml中事先标定了
       b、特征像素的深度从VIS中获取(vins-mono是通过三角测量，不太准)
       c、检测失效：若出现图像深度特征匹配关联太少或Imu的bias过大导致vins-mono失效，则用LIS重新对VIS进行初始化

2）lio-sam .....
       LIS在lio-sam上的改进：
       1）因为LIS的初始化早于VIS，所以在最开始的去畸变和scan2map的初始是由imu预积分提供(代码中假设Imu的bias、噪声和速度都是0)；等VIS初始化完毕后，就是用其里程计来进行去畸变和scan2map
       2）在lio-sam的预积分因子、激光里程计因子、回环检测因子的优化基础上，另加入视觉里程计因子，回环检测先VIS判断再LIS优化
       3）加入了LIS失效检测模块：对两帧进行匹配的最小二乘方程中，系数矩阵的最小奇异特征值小于一定阈值时，则认为特征退化，对应奇异特征向量为退化方向，并丢弃本次激光里程计因子约束


****  lvi-sam的融合方式  ****
1）VIS用LIS来初始化，即用LIS的初始位姿作为VIS的初始优化值
2）VIS中需要根据图像计算特征的深度，可以利用雷达的测量值来辅助优化
3）LIS计算scan2map的初值，可以用VIS的视觉里程计来计算
4）回环检测先用VIS确定初值，再用LIS来优化
5）LIS和VIS在紧耦合的基础上，有保持各自的完整，确保任一失效(VIS跟踪失败或LIS特征退化)后，整个系统可以正常运行，提高了鲁棒性


****  依赖库  ****
GTSAM 4.0 +
opencv 4.0 + ?? 
pcl 1.8 +
camodocal (相机标定库，代码里直接导入了第三方库)
Eigen
... etc.

****  运行参考  ****
https://wenku.baidu.com/view/e7ae1260b007e87101f69e3143323968011cf4e4.html
https://zhuanlan.zhihu.com/p/464202307

****  问题  ****
1）vins经常崩掉
2）.bag播放速率尽量慢

****  记录  ****
1）至今没有运行成功，因为vins一致崩掉  :)    2022.8.23
